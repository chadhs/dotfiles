# aliases
alias ez='vim ~/.zshrc'
alias grep='grep --color=auto'
alias l='ls'
alias la='ls -ah'
alias ll='ls -lh'
alias lla='ls -lah'
alias cd..='cd ..'
## fix backspace in vim in zsh in emacs :grin:
stty erase '^?'
## check weather
alias checkweather='curl wttr.in'

## preflight shell check
function zshonly(){
  ## only run command if shell is zsh
  currshell=$(ps -p $$ | grep $$ | awk '{ print $4 }')
  [[ "${currshell}" = "-zsh" ]] && "${@}"
}

## oh-my-zsh aliases to remove
zshonly disable r

## mac only aliases
if [[ $(uname) = "Darwin" ]]; then
    alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs "$@"'
    alias vim='mvim -v'
    alias flushdns='dscacheutil -flushcache;sudo killall -HUP mDNSResponder'
    alias restart_en0='sudo ifconfig en0 down && sudo ifconfig en0 up'
    alias shadowno='defaults write com.apple.screencapture disable-shadow -bool true && killall SystemUIServer'
    alias shadowyes='defaults delete com.apple.screencapture disable-shadow && killall SystemUIServer'
    alias sortlaunchpad='defaults write com.apple.dock ResetLaunchPad -bool true; killall Dock'
    alias brewdoc='brew update && brew doctor'
    alias brewup='brew update && brew doctor && brew upgrade; brew cleanup'
    alias brewforce='brew update && brew doctor; brew upgrade; brew cleanup'
    alias brewfix='brew update-reset'
    #alias caskup='brew cask list | xargs brew cask install; brew cask cleanup'
    alias caskup='brew cu -y --cleanup'
    alias caskall='brew cu -a --cleanup'
    alias masup='mas upgrade'
    alias speedtest='speedtest-cli'
    #alias scheme="rlwrap scheme"
    ### stop correction intrusion
    zshonly alias chef='nocorrect chef'
    zshonly alias knife='nocorrect knife'
    zshonly alias npm='nocorrect npm'
    zshonly alias sass='nocorrect sass'
    zshonly alias vagrant='nocorrect vagrant'
    zshonly alias kubectl='nocorrect kubectl'

    ### mac development
    ### homebrew
    # export HOMEBREW_CASK_OPTS="--appdir=/Applications"
    ### static local hosting
    alias pow-install='curl get.pow.cx | sh'
    alias pow-remove='curl get.pow.cx/uninstall.sh | sh'
    alias pow-start='launchctl load -w ~/Library/LaunchAgents/cx.pow.powd.plist'
    alias pow-stop='launchctl unload ~/Library/LaunchAgents/cx.pow.powd.plist'
    alias pow-status='launchctl list | grep cx.pow'
    ### browser reloading
    alias livereload-safari="filewatcher '**/*' 'osascript ~/bin/reload-safari.scpt' &"
    alias livereload-chrome="filewatcher '**/*' 'osascript ~/bin/reload-chrome.scpt' &"
    ### vagrant
    alias vssh='vagrant up && vagrant ssh'
    ### ruby
    source /usr/local/opt/chruby/share/chruby/chruby.sh
    source /usr/local/opt/chruby/share/chruby/auto.sh
    #### set the default system-wide
    [[ -n $(chruby | grep "2.5") ]] && chruby 2.5
    ### node
    alias npmlist='npm list -g --depth=0 2>/dev/null'
    ### js
    alias chromedev='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --remote-debugging-port=9222 &'
    ### minikube
    alias mkset='eval $(minikube docker-env)'
    alias mkunset='eval $(minikube docker-env -u)'

fi

## update dot files
function update-dotfiles(){
    curdir=$(pwd)
    cd ~/dotfiles && git pull && sh deploy.sh
    cd $curdir
}

## update dot files
function update-tech-notes(){
    curdir=$(pwd)
    cd ~/tech-notes && git pull
    cd $curdir
}

## fix emacs packages
function fix-emacs-pkgs(){
    rm -rf ~/.emacs.d/elpa/*
}

## when in a shell in emacs, remind yourself not to launch vim there
[[ $(uname) = "Darwin" ]] && [[ $EMACS ]] && alias vim='echo "Do not run Vim in a shell within Emacs; use Emacs to edit"'
### hack to be able to update vim using vi command avoiding the message above when in emacs
[[ $(uname) = "Darwin" ]] && [[ $EMACS ]] && alias vimup='vi +PluginInstall! +qall'

## man page color and search hilighting
export PAGER="less"
function man(){
    env \
	LESS_TERMCAP_mb=$(printf "\e[1;31m") \
	LESS_TERMCAP_md=$(printf "\e[1;31m") \
	LESS_TERMCAP_me=$(printf "\e[0m") \
	LESS_TERMCAP_se=$(printf "\e[0m") \
	LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
	LESS_TERMCAP_ue=$(printf "\e[0m") \
	LESS_TERMCAP_us=$(printf "\e[1;32m") \
	man "$@"
}
